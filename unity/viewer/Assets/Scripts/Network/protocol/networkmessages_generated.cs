// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace NetworkMessage
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CS_LoginReq : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CS_LoginReq GetRootAsCS_LoginReq(ByteBuffer _bb) { return GetRootAsCS_LoginReq(_bb, new CS_LoginReq()); }
  public static CS_LoginReq GetRootAsCS_LoginReq(ByteBuffer _bb, CS_LoginReq obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_LoginReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Pwd { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPwdBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPwdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPwdArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<NetworkMessage.CS_LoginReq> CreateCS_LoginReq(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset pwdOffset = default(StringOffset)) {
    builder.StartTable(2);
    CS_LoginReq.AddPwd(builder, pwdOffset);
    CS_LoginReq.AddId(builder, idOffset);
    return CS_LoginReq.EndCS_LoginReq(builder);
  }

  public static void StartCS_LoginReq(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddPwd(FlatBufferBuilder builder, StringOffset pwdOffset) { builder.AddOffset(1, pwdOffset.Value, 0); }
  public static Offset<NetworkMessage.CS_LoginReq> EndCS_LoginReq(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.CS_LoginReq>(o);
  }
  public CS_LoginReq_FBS UnPack() {
    var _o = new CS_LoginReq_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_LoginReq_FBS _o) {
    _o.Id = this.Id;
    _o.Pwd = this.Pwd;
  }
  public static Offset<NetworkMessage.CS_LoginReq> Pack(FlatBufferBuilder builder, CS_LoginReq_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.CS_LoginReq>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _pwd = _o.Pwd == null ? default(StringOffset) : builder.CreateString(_o.Pwd);
    return CreateCS_LoginReq(
      builder,
      _id,
      _pwd);
  }
}

public class CS_LoginReq_FBS
{
  public string Id { get; set; }
  public string Pwd { get; set; }

  public CS_LoginReq_FBS() {
    this.Id = null;
    this.Pwd = null;
  }
}


static public class CS_LoginReqVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Pwd*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct CS_WorldJoinReq : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CS_WorldJoinReq GetRootAsCS_WorldJoinReq(ByteBuffer _bb) { return GetRootAsCS_WorldJoinReq(_bb, new CS_WorldJoinReq()); }
  public static CS_WorldJoinReq GetRootAsCS_WorldJoinReq(ByteBuffer _bb, CS_WorldJoinReq obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_WorldJoinReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Gate { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.CS_WorldJoinReq> CreateCS_WorldJoinReq(FlatBufferBuilder builder,
      int gate = 0) {
    builder.StartTable(1);
    CS_WorldJoinReq.AddGate(builder, gate);
    return CS_WorldJoinReq.EndCS_WorldJoinReq(builder);
  }

  public static void StartCS_WorldJoinReq(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddGate(FlatBufferBuilder builder, int gate) { builder.AddInt(0, gate, 0); }
  public static Offset<NetworkMessage.CS_WorldJoinReq> EndCS_WorldJoinReq(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.CS_WorldJoinReq>(o);
  }
  public CS_WorldJoinReq_FBS UnPack() {
    var _o = new CS_WorldJoinReq_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_WorldJoinReq_FBS _o) {
    _o.Gate = this.Gate;
  }
  public static Offset<NetworkMessage.CS_WorldJoinReq> Pack(FlatBufferBuilder builder, CS_WorldJoinReq_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.CS_WorldJoinReq>);
    return CreateCS_WorldJoinReq(
      builder,
      _o.Gate);
  }
}

public class CS_WorldJoinReq_FBS
{
  public int Gate { get; set; }

  public CS_WorldJoinReq_FBS() {
    this.Gate = 0;
  }
}


static public class CS_WorldJoinReqVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Gate*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct CS_UpdatePosition : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CS_UpdatePosition GetRootAsCS_UpdatePosition(ByteBuffer _bb) { return GetRootAsCS_UpdatePosition(_bb, new CS_UpdatePosition()); }
  public static CS_UpdatePosition GetRootAsCS_UpdatePosition(ByteBuffer _bb, CS_UpdatePosition obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_UpdatePosition __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Sessionid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Head { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public NetworkMessage.Vector3? Position { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.Vector3?)(new NetworkMessage.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<NetworkMessage.CS_UpdatePosition> CreateCS_UpdatePosition(FlatBufferBuilder builder,
      int sessionid = 0,
      int head = 0,
      NetworkMessage.Vector3_FBS position = null) {
    builder.StartTable(3);
    CS_UpdatePosition.AddPosition(builder, NetworkMessage.Vector3.Pack(builder, position));
    CS_UpdatePosition.AddHead(builder, head);
    CS_UpdatePosition.AddSessionid(builder, sessionid);
    return CS_UpdatePosition.EndCS_UpdatePosition(builder);
  }

  public static void StartCS_UpdatePosition(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(0, sessionid, 0); }
  public static void AddHead(FlatBufferBuilder builder, int head) { builder.AddInt(1, head, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3> positionOffset) { builder.AddStruct(2, positionOffset.Value, 0); }
  public static Offset<NetworkMessage.CS_UpdatePosition> EndCS_UpdatePosition(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.CS_UpdatePosition>(o);
  }
  public CS_UpdatePosition_FBS UnPack() {
    var _o = new CS_UpdatePosition_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_UpdatePosition_FBS _o) {
    _o.Sessionid = this.Sessionid;
    _o.Head = this.Head;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
  }
  public static Offset<NetworkMessage.CS_UpdatePosition> Pack(FlatBufferBuilder builder, CS_UpdatePosition_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.CS_UpdatePosition>);
    return CreateCS_UpdatePosition(
      builder,
      _o.Sessionid,
      _o.Head,
      _o.Position);
  }
}

public class CS_UpdatePosition_FBS
{
  public int Sessionid { get; set; }
  public int Head { get; set; }
  public NetworkMessage.Vector3_FBS Position { get; set; }

  public CS_UpdatePosition_FBS() {
    this.Sessionid = 0;
    this.Head = 0;
    this.Position = new NetworkMessage.Vector3_FBS();
  }
}


static public class CS_UpdatePositionVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Head*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Position*/, 12 /*NetworkMessage.Vector3*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
/////////////////////////////////////////////////////////
public struct SC_LoginAns : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_LoginAns GetRootAsSC_LoginAns(ByteBuffer _bb) { return GetRootAsSC_LoginAns(_bb, new SC_LoginAns()); }
  public static SC_LoginAns GetRootAsSC_LoginAns(ByteBuffer _bb, SC_LoginAns obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_LoginAns __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Errorcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Sessionid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Nickname { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNicknameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNicknameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNicknameArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<NetworkMessage.SC_LoginAns> CreateSC_LoginAns(FlatBufferBuilder builder,
      int errorcode = 0,
      int sessionid = 0,
      StringOffset nicknameOffset = default(StringOffset)) {
    builder.StartTable(3);
    SC_LoginAns.AddNickname(builder, nicknameOffset);
    SC_LoginAns.AddSessionid(builder, sessionid);
    SC_LoginAns.AddErrorcode(builder, errorcode);
    return SC_LoginAns.EndSC_LoginAns(builder);
  }

  public static void StartSC_LoginAns(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddErrorcode(FlatBufferBuilder builder, int errorcode) { builder.AddInt(0, errorcode, 0); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(1, sessionid, 0); }
  public static void AddNickname(FlatBufferBuilder builder, StringOffset nicknameOffset) { builder.AddOffset(2, nicknameOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_LoginAns> EndSC_LoginAns(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_LoginAns>(o);
  }
  public SC_LoginAns_FBS UnPack() {
    var _o = new SC_LoginAns_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_LoginAns_FBS _o) {
    _o.Errorcode = this.Errorcode;
    _o.Sessionid = this.Sessionid;
    _o.Nickname = this.Nickname;
  }
  public static Offset<NetworkMessage.SC_LoginAns> Pack(FlatBufferBuilder builder, SC_LoginAns_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_LoginAns>);
    var _nickname = _o.Nickname == null ? default(StringOffset) : builder.CreateString(_o.Nickname);
    return CreateSC_LoginAns(
      builder,
      _o.Errorcode,
      _o.Sessionid,
      _nickname);
  }
}

public class SC_LoginAns_FBS
{
  public int Errorcode { get; set; }
  public int Sessionid { get; set; }
  public string Nickname { get; set; }

  public SC_LoginAns_FBS() {
    this.Errorcode = 0;
    this.Sessionid = 0;
    this.Nickname = null;
  }
}


static public class SC_LoginAnsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Errorcode*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Nickname*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_AccountInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_AccountInfo GetRootAsSC_AccountInfo(ByteBuffer _bb) { return GetRootAsSC_AccountInfo(_bb, new SC_AccountInfo()); }
  public static SC_AccountInfo GetRootAsSC_AccountInfo(ByteBuffer _bb, SC_AccountInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_AccountInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Chartype { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_AccountInfo> CreateSC_AccountInfo(FlatBufferBuilder builder,
      int chartype = 0) {
    builder.StartTable(1);
    SC_AccountInfo.AddChartype(builder, chartype);
    return SC_AccountInfo.EndSC_AccountInfo(builder);
  }

  public static void StartSC_AccountInfo(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddChartype(FlatBufferBuilder builder, int chartype) { builder.AddInt(0, chartype, 0); }
  public static Offset<NetworkMessage.SC_AccountInfo> EndSC_AccountInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_AccountInfo>(o);
  }
  public SC_AccountInfo_FBS UnPack() {
    var _o = new SC_AccountInfo_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_AccountInfo_FBS _o) {
    _o.Chartype = this.Chartype;
  }
  public static Offset<NetworkMessage.SC_AccountInfo> Pack(FlatBufferBuilder builder, SC_AccountInfo_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_AccountInfo>);
    return CreateSC_AccountInfo(
      builder,
      _o.Chartype);
  }
}

public class SC_AccountInfo_FBS
{
  public int Chartype { get; set; }

  public SC_AccountInfo_FBS() {
    this.Chartype = 0;
  }
}


static public class SC_AccountInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Chartype*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_WorldEnterNotify : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_WorldEnterNotify GetRootAsSC_WorldEnterNotify(ByteBuffer _bb) { return GetRootAsSC_WorldEnterNotify(_bb, new SC_WorldEnterNotify()); }
  public static SC_WorldEnterNotify GetRootAsSC_WorldEnterNotify(ByteBuffer _bb, SC_WorldEnterNotify obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_WorldEnterNotify __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Zoneid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_WorldEnterNotify> CreateSC_WorldEnterNotify(FlatBufferBuilder builder,
      int zoneid = 0) {
    builder.StartTable(1);
    SC_WorldEnterNotify.AddZoneid(builder, zoneid);
    return SC_WorldEnterNotify.EndSC_WorldEnterNotify(builder);
  }

  public static void StartSC_WorldEnterNotify(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddZoneid(FlatBufferBuilder builder, int zoneid) { builder.AddInt(0, zoneid, 0); }
  public static Offset<NetworkMessage.SC_WorldEnterNotify> EndSC_WorldEnterNotify(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_WorldEnterNotify>(o);
  }
  public SC_WorldEnterNotify_FBS UnPack() {
    var _o = new SC_WorldEnterNotify_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_WorldEnterNotify_FBS _o) {
    _o.Zoneid = this.Zoneid;
  }
  public static Offset<NetworkMessage.SC_WorldEnterNotify> Pack(FlatBufferBuilder builder, SC_WorldEnterNotify_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_WorldEnterNotify>);
    return CreateSC_WorldEnterNotify(
      builder,
      _o.Zoneid);
  }
}

public class SC_WorldEnterNotify_FBS
{
  public int Zoneid { get; set; }

  public SC_WorldEnterNotify_FBS() {
    this.Zoneid = 0;
  }
}


static public class SC_WorldEnterNotifyVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Zoneid*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_CreatePlayer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CreatePlayer GetRootAsSC_CreatePlayer(ByteBuffer _bb) { return GetRootAsSC_CreatePlayer(_bb, new SC_CreatePlayer()); }
  public static SC_CreatePlayer GetRootAsSC_CreatePlayer(ByteBuffer _bb, SC_CreatePlayer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CreatePlayer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.CreatePlayerInfo? Player { get { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.CreatePlayerInfo?)(new NetworkMessage.CreatePlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<NetworkMessage.SC_CreatePlayer> CreateSC_CreatePlayer(FlatBufferBuilder builder,
      Offset<NetworkMessage.CreatePlayerInfo> playerOffset = default(Offset<NetworkMessage.CreatePlayerInfo>)) {
    builder.StartTable(1);
    SC_CreatePlayer.AddPlayer(builder, playerOffset);
    return SC_CreatePlayer.EndSC_CreatePlayer(builder);
  }

  public static void StartSC_CreatePlayer(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPlayer(FlatBufferBuilder builder, Offset<NetworkMessage.CreatePlayerInfo> playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_CreatePlayer> EndSC_CreatePlayer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_CreatePlayer>(o);
  }
  public SC_CreatePlayer_FBS UnPack() {
    var _o = new SC_CreatePlayer_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_CreatePlayer_FBS _o) {
    _o.Player = this.Player.HasValue ? this.Player.Value.UnPack() : null;
  }
  public static Offset<NetworkMessage.SC_CreatePlayer> Pack(FlatBufferBuilder builder, SC_CreatePlayer_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_CreatePlayer>);
    var _player = _o.Player == null ? default(Offset<NetworkMessage.CreatePlayerInfo>) : NetworkMessage.CreatePlayerInfo.Pack(builder, _o.Player);
    return CreateSC_CreatePlayer(
      builder,
      _player);
  }
}

public class SC_CreatePlayer_FBS
{
  public NetworkMessage.CreatePlayerInfo_FBS Player { get; set; }

  public SC_CreatePlayer_FBS() {
    this.Player = null;
  }
}


static public class SC_CreatePlayerVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*Player*/, NetworkMessage.CreatePlayerInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_CreatePlayers : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CreatePlayers GetRootAsSC_CreatePlayers(ByteBuffer _bb) { return GetRootAsSC_CreatePlayers(_bb, new SC_CreatePlayers()); }
  public static SC_CreatePlayers GetRootAsSC_CreatePlayers(ByteBuffer _bb, SC_CreatePlayers obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CreatePlayers __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.CreatePlayerInfo? Player(int j) { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.CreatePlayerInfo?)(new NetworkMessage.CreatePlayerInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PlayerLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<NetworkMessage.SC_CreatePlayers> CreateSC_CreatePlayers(FlatBufferBuilder builder,
      VectorOffset playerOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SC_CreatePlayers.AddPlayer(builder, playerOffset);
    return SC_CreatePlayers.EndSC_CreatePlayers(builder);
  }

  public static void StartSC_CreatePlayers(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPlayer(FlatBufferBuilder builder, VectorOffset playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static VectorOffset CreatePlayerVector(FlatBufferBuilder builder, Offset<NetworkMessage.CreatePlayerInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePlayerVectorBlock(FlatBufferBuilder builder, Offset<NetworkMessage.CreatePlayerInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<NetworkMessage.CreatePlayerInfo>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<NetworkMessage.CreatePlayerInfo>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPlayerVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NetworkMessage.SC_CreatePlayers> EndSC_CreatePlayers(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_CreatePlayers>(o);
  }
  public SC_CreatePlayers_FBS UnPack() {
    var _o = new SC_CreatePlayers_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_CreatePlayers_FBS _o) {
    _o.Player = new List<NetworkMessage.CreatePlayerInfo_FBS>();
    for (var _j = 0; _j < this.PlayerLength; ++_j) {_o.Player.Add(this.Player(_j).HasValue ? this.Player(_j).Value.UnPack() : null);}
  }
  public static Offset<NetworkMessage.SC_CreatePlayers> Pack(FlatBufferBuilder builder, SC_CreatePlayers_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_CreatePlayers>);
    var _player = default(VectorOffset);
    if (_o.Player != null) {
      var __player = new Offset<NetworkMessage.CreatePlayerInfo>[_o.Player.Count];
      for (var _j = 0; _j < __player.Length; ++_j) { __player[_j] = NetworkMessage.CreatePlayerInfo.Pack(builder, _o.Player[_j]); }
      _player = CreatePlayerVector(builder, __player);
    }
    return CreateSC_CreatePlayers(
      builder,
      _player);
  }
}

public class SC_CreatePlayers_FBS
{
  public List<NetworkMessage.CreatePlayerInfo_FBS> Player { get; set; }

  public SC_CreatePlayers_FBS() {
    this.Player = null;
  }
}


static public class SC_CreatePlayersVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfTables(tablePos, 4 /*Player*/, NetworkMessage.CreatePlayerInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_RemovePlayer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_RemovePlayer GetRootAsSC_RemovePlayer(ByteBuffer _bb) { return GetRootAsSC_RemovePlayer(_bb, new SC_RemovePlayer()); }
  public static SC_RemovePlayer GetRootAsSC_RemovePlayer(ByteBuffer _bb, SC_RemovePlayer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_RemovePlayer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Sessionid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_RemovePlayer> CreateSC_RemovePlayer(FlatBufferBuilder builder,
      int sessionid = 0) {
    builder.StartTable(1);
    SC_RemovePlayer.AddSessionid(builder, sessionid);
    return SC_RemovePlayer.EndSC_RemovePlayer(builder);
  }

  public static void StartSC_RemovePlayer(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(0, sessionid, 0); }
  public static Offset<NetworkMessage.SC_RemovePlayer> EndSC_RemovePlayer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_RemovePlayer>(o);
  }
  public SC_RemovePlayer_FBS UnPack() {
    var _o = new SC_RemovePlayer_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_RemovePlayer_FBS _o) {
    _o.Sessionid = this.Sessionid;
  }
  public static Offset<NetworkMessage.SC_RemovePlayer> Pack(FlatBufferBuilder builder, SC_RemovePlayer_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_RemovePlayer>);
    return CreateSC_RemovePlayer(
      builder,
      _o.Sessionid);
  }
}

public class SC_RemovePlayer_FBS
{
  public int Sessionid { get; set; }

  public SC_RemovePlayer_FBS() {
    this.Sessionid = 0;
  }
}


static public class SC_RemovePlayerVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_UpdatePosition : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_UpdatePosition GetRootAsSC_UpdatePosition(ByteBuffer _bb) { return GetRootAsSC_UpdatePosition(_bb, new SC_UpdatePosition()); }
  public static SC_UpdatePosition GetRootAsSC_UpdatePosition(ByteBuffer _bb, SC_UpdatePosition obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_UpdatePosition __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Sessionid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Head { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public NetworkMessage.Vector3? Position { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.Vector3?)(new NetworkMessage.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<NetworkMessage.SC_UpdatePosition> CreateSC_UpdatePosition(FlatBufferBuilder builder,
      int sessionid = 0,
      int head = 0,
      NetworkMessage.Vector3_FBS position = null) {
    builder.StartTable(3);
    SC_UpdatePosition.AddPosition(builder, NetworkMessage.Vector3.Pack(builder, position));
    SC_UpdatePosition.AddHead(builder, head);
    SC_UpdatePosition.AddSessionid(builder, sessionid);
    return SC_UpdatePosition.EndSC_UpdatePosition(builder);
  }

  public static void StartSC_UpdatePosition(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(0, sessionid, 0); }
  public static void AddHead(FlatBufferBuilder builder, int head) { builder.AddInt(1, head, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3> positionOffset) { builder.AddStruct(2, positionOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_UpdatePosition> EndSC_UpdatePosition(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_UpdatePosition>(o);
  }
  public SC_UpdatePosition_FBS UnPack() {
    var _o = new SC_UpdatePosition_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_UpdatePosition_FBS _o) {
    _o.Sessionid = this.Sessionid;
    _o.Head = this.Head;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
  }
  public static Offset<NetworkMessage.SC_UpdatePosition> Pack(FlatBufferBuilder builder, SC_UpdatePosition_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_UpdatePosition>);
    return CreateSC_UpdatePosition(
      builder,
      _o.Sessionid,
      _o.Head,
      _o.Position);
  }
}

public class SC_UpdatePosition_FBS
{
  public int Sessionid { get; set; }
  public int Head { get; set; }
  public NetworkMessage.Vector3_FBS Position { get; set; }

  public SC_UpdatePosition_FBS() {
    this.Sessionid = 0;
    this.Head = 0;
    this.Position = new NetworkMessage.Vector3_FBS();
  }
}


static public class SC_UpdatePositionVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Head*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Position*/, 12 /*NetworkMessage.Vector3*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_PlayerUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_PlayerUpdate GetRootAsSC_PlayerUpdate(ByteBuffer _bb) { return GetRootAsSC_PlayerUpdate(_bb, new SC_PlayerUpdate()); }
  public static SC_PlayerUpdate GetRootAsSC_PlayerUpdate(ByteBuffer _bb, SC_PlayerUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_PlayerUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Head { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Health { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int State { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_PlayerUpdate> CreateSC_PlayerUpdate(FlatBufferBuilder builder,
      int head = 0,
      int health = 0,
      int state = 0) {
    builder.StartTable(3);
    SC_PlayerUpdate.AddState(builder, state);
    SC_PlayerUpdate.AddHealth(builder, health);
    SC_PlayerUpdate.AddHead(builder, head);
    return SC_PlayerUpdate.EndSC_PlayerUpdate(builder);
  }

  public static void StartSC_PlayerUpdate(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddHead(FlatBufferBuilder builder, int head) { builder.AddInt(0, head, 0); }
  public static void AddHealth(FlatBufferBuilder builder, int health) { builder.AddInt(1, health, 0); }
  public static void AddState(FlatBufferBuilder builder, int state) { builder.AddInt(2, state, 0); }
  public static Offset<NetworkMessage.SC_PlayerUpdate> EndSC_PlayerUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_PlayerUpdate>(o);
  }
  public SC_PlayerUpdate_FBS UnPack() {
    var _o = new SC_PlayerUpdate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_PlayerUpdate_FBS _o) {
    _o.Head = this.Head;
    _o.Health = this.Health;
    _o.State = this.State;
  }
  public static Offset<NetworkMessage.SC_PlayerUpdate> Pack(FlatBufferBuilder builder, SC_PlayerUpdate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_PlayerUpdate>);
    return CreateSC_PlayerUpdate(
      builder,
      _o.Head,
      _o.Health,
      _o.State);
  }
}

public class SC_PlayerUpdate_FBS
{
  public int Head { get; set; }
  public int Health { get; set; }
  public int State { get; set; }

  public SC_PlayerUpdate_FBS() {
    this.Head = 0;
    this.Health = 0;
    this.State = 0;
  }
}


static public class SC_PlayerUpdateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Head*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Health*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*State*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct PacketWrapper : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static PacketWrapper GetRootAsPacketWrapper(ByteBuffer _bb) { return GetRootAsPacketWrapper(_bb, new PacketWrapper()); }
  public static PacketWrapper GetRootAsPacketWrapper(ByteBuffer _bb, PacketWrapper obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyPacketWrapper(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, PacketWrapperVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PacketWrapper __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Type { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public byte Packet(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int PacketLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPacketBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPacketBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPacketArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<NetworkMessage.PacketWrapper> CreatePacketWrapper(FlatBufferBuilder builder,
      ushort type = 0,
      VectorOffset packetOffset = default(VectorOffset)) {
    builder.StartTable(2);
    PacketWrapper.AddPacket(builder, packetOffset);
    PacketWrapper.AddType(builder, type);
    return PacketWrapper.EndPacketWrapper(builder);
  }

  public static void StartPacketWrapper(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddType(FlatBufferBuilder builder, ushort type) { builder.AddUshort(0, type, 0); }
  public static void AddPacket(FlatBufferBuilder builder, VectorOffset packetOffset) { builder.AddOffset(1, packetOffset.Value, 0); }
  public static VectorOffset CreatePacketVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePacketVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePacketVectorBlock(FlatBufferBuilder builder, ArraySegment<byte> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePacketVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<byte>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPacketVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<NetworkMessage.PacketWrapper> EndPacketWrapper(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.PacketWrapper>(o);
  }
  public static void FinishPacketWrapperBuffer(FlatBufferBuilder builder, Offset<NetworkMessage.PacketWrapper> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPacketWrapperBuffer(FlatBufferBuilder builder, Offset<NetworkMessage.PacketWrapper> offset) { builder.FinishSizePrefixed(offset.Value); }
  public PacketWrapper_FBS UnPack() {
    var _o = new PacketWrapper_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PacketWrapper_FBS _o) {
    _o.Type = this.Type;
    _o.Packet = new List<byte>();
    for (var _j = 0; _j < this.PacketLength; ++_j) {_o.Packet.Add(this.Packet(_j));}
  }
  public static Offset<NetworkMessage.PacketWrapper> Pack(FlatBufferBuilder builder, PacketWrapper_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.PacketWrapper>);
    var _packet = default(VectorOffset);
    if (_o.Packet != null) {
      var __packet = _o.Packet.ToArray();
      _packet = CreatePacketVector(builder, __packet);
    }
    return CreatePacketWrapper(
      builder,
      _o.Type,
      _packet);
  }
}

public class PacketWrapper_FBS
{
  public ushort Type { get; set; }
  public List<byte> Packet { get; set; }

  public PacketWrapper_FBS() {
    this.Type = 0;
    this.Packet = null;
  }
  public static PacketWrapper_FBS DeserializeFromBinary(byte[] fbBuffer) {
    return PacketWrapper.GetRootAsPacketWrapper(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    PacketWrapper.FinishPacketWrapperBuffer(fbb, PacketWrapper.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class PacketWrapperVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Type*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*Packet*/, 1 /*byte*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
